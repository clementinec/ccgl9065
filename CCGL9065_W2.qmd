---
title: "CCGL9065: Our Response to Climate Change: HK2100"
subtitle: "Food Systems"
author: Dr. Hongshan Guo and Class

format:
  revealjs:
    slide-number: true
    theme: simple
    width: 1600
    height: 1200
    <!-- preview-links: auto -->
    embed-resources: true
    incremental: true
    center: true

---
 
#  Quick Recap From Two Weeks Ago
- ‘Us against the AI’
- Role-played as Pro/Anti-CC experts and diﬀerent professions
- Did a little bit of work on Notion
- Skipped the Group Discussion


# Logistic Questions

- Tutorial Assignments?
  - Pick your time slots
  - CIC-Badged so starting off with reflective writing for T1/T2 (W2/W3)
- Notion Pages and how that works?
  - Refer to Annoucement Email on publishing and submitting
  - Submit <span style="color:red">URL Only</span> shared as **published site**
  - Due EOD every Wednesday

# CCGL9065: Our Response to Climate Change

## Address Common Concerns on Pro/Anti-CC

- Take Climate Change Pro/Against as stances
- Discuss complex issues each week from various angles
- Familiarize with common/uncommon narratives
- Role-play as people from diﬀerent social pockets


## A little Brain-Storming with Pro-CC Stances
- Highlight how climate change impacts these areas and propose sustainable solutions or
adaptations.
- Tailor arguments to weekly themes to win more support through narratives/visuals/videos that shapes different people's perceptions
- Raise awareness from public on why being more/less climate-friendly is relevant to everybody.
- Propose Solutions to <span style="color:red">theme-related challenges</span>

## Food Systems - What do we know about them?

## Some of the hottest topics on food systems

- Plant-based diets/meat alternatives
  - Shifting towards plant-based eating and rise of lab-grown meat
- Food waste reduction
  - Strategies to minimize food waste throughout the supply chain from farm to table
- Regenerative agriculture: 
  - Farming practices that sequester carbon in soil, improve biodiversity and enhance ecosystem resilience.
- Vertical farming and urban agriculture
- Sustainable fishing: over-fishing?
- Carbon labeling of food products


## Meat Alternatives & Climate Change: The Debate


### Scientific Pros

- 30-90% fewer greenhouse gas emissions
- Significantly reduced land use
- Lower water consumption

### Scientific Cons

- Energy-intensive processing for some alternatives
- Potential monoculture issues (e.g., soy, peas)
- Nutritional profile differences


### Narrative Pros

- Innovative tech solution to climate change
- Enables "ethical consumption"
- Potential to improve global food security

### Narrative Cons

- Perception as "overly processed" food
- Cultural resistance to traditional dish substitutes
- Accusations of "greenwashing"

---
## Cutting-Edge Discussions

1. Cell-based meat: Promise vs. reality
2. Hybrid products: A transitional solution?
3. Algae and mycoprotein: The next frontier
4. Local vs. imported: Which is better?
5. Holistic assessments: Beyond just emissions
6. Policy impacts on climate benefits

::: {.notes}
1. Cell-based meat
   - Also known as lab-grown or cultured meat
   - Promise: Identical to conventional meat but with much lower environmental impact
   - Reality: Still in development, high production costs, energy requirements uncertain
   - Key debate: Will it be scalable and truly more sustainable at industrial levels?
   - Companies to mention: Memphis Meats, Mosa Meat, Aleph Farms

2. Hybrid products
   - Blend of plant-based ingredients and conventional meat
   - Examples: Burger patties with 30% mushroom, 70% beef
   - Pros: Easier consumer transition, immediate impact on reducing meat consumption
   - Cons: May slow transition to fully plant-based alternatives
   - Key question: Are these a stepping stone or a distraction?

3. Algae and mycoprotein
   - Algae: High in protein, omega-3s; can be grown in non-arable land
   - Mycoprotein (e.g., Quorn): Fungal-based, lower land and water use than soy
   - Benefits: Potentially more sustainable than current plant-based proteins
   - Challenges: Taste, texture, consumer acceptance
   - Future potential: Could these become primary protein sources?

4. Local vs. imported:
   - Debate: Local meat vs. imported plant-based alternatives
   - Factors to consider: Transportation emissions vs. production emissions
   - Complexity: "Food miles" often less impactful than production methods
   - Key point: Need for case-by-case analysis; no one-size-fits-all answer
   - Example study: NZ lamb in UK markets vs. local UK lamb

5. Holistic assessments
   - Moving beyond just carbon footprint
   - Factors to include: Water use, biodiversity impact, soil health, social factors
   - Tools: Life Cycle Assessments (LCAs) becoming more comprehensive
   - Challenge: How to communicate complex data to consumers?
   - Emerging concept: "True Cost Accounting" in food systems

6. Policy impacts
   - Current: Many policies still favor conventional meat production
   - Potential changes: Carbon pricing, emissions labels, sustainability subsidies
   - Debate: How would these policies affect meat alternatives' competitiveness?
   - Global aspect: Need for international coordination in policy approaches
   - Example: EU's Farm to Fork Strategy and its potential impact on meat alternatives

Key message: These discussions highlight the complexity of the issue. There's no simple answer, but addressing these points is crucial for the future of sustainable food systems.
:::
## Key Takeaway

Meat alternatives offer significant potential for climate change mitigation, but challenges remain. The debate is complex, involving science, culture, and policy.



## Some Interesting Representation of those ideas - For-CC on Meat

![](data/sci_am_food.jpg)

## Some Interesting Representation of those ideas - Against-CC on Meat

![](data/dai_bea_food.jpg)



## 

```{=html}
<style>
  #groupAssignment_container {
    text-align: center;
    margin-top: 20px;
    font-family: Arial, sans-serif;
  }
  #groupAssignment_startButton {
    font-size: 24px;
    padding: 15px 30px;
    cursor: pointer;
    background-color: #3498db;
    color: white;
    border: none;
    border-radius: 5px;
    transition: background-color 0.3s;
  }
  #groupAssignment_startButton:hover {
    background-color: #2980b9;
  }
  #groupAssignment_overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(255, 255, 255, 0.9);
    display: none;
    justify-content: center;
    align-items: center;
    z-index: 1000;
  }
  #groupAssignment_display {
    font-size: 36px;
    text-align: center;
    padding: 20px;
    max-width: 90%;
    max-height: 90%;
    overflow-y: auto;
  }
  #groupAssignment_display h2 {
    color: #2c3e50;
    font-size: 48px;
    margin-bottom: 30px;
  }
  #groupAssignment_display ul {
    list-style-type: none;
    padding: 0;
  }
  #groupAssignment_display li {
    margin: 20px 0;
    font-size: 36px;
    background-color: #ecf0f1;
    padding: 15px;
    border-radius: 10px;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
  }
  #groupAssignment_closeButton {
    position: absolute;
    top: 20px;
    right: 20px;
    font-size: 24px;
    cursor: pointer;
    background-color: #e74c3c;
    color: white;
    border: none;
    border-radius: 5px;
    padding: 10px 20px;
  }
</style>

<div id="groupAssignment_container">
  <h1 style="font-size: 48px; color: #34495e;">Group Assignment Time!</h1>
  <button id="groupAssignment_startButton">Start the assignment</button>
</div>

<div id="groupAssignment_overlay">
  <div id="groupAssignment_display"></div>
  <button id="groupAssignment_closeButton">Close</button>
</div>

<script>
// Create a namespace for our group assignment functionality
const GroupAssignment = {
  groups: [
    'Group One', 'Group Two', 'Group Three', 'Group Four', 
    'Group Five', 'Group Six', 'Group Seven', 'Group Eight'
  ],
  vocations: [
    'Logistics/Transportation',
    'Farming/Food Procurement',
    'Energy and Industry',
    'Policy-makers/decision makers',
    'Technology and Innovation',
    'Service/Urban Workers',
    'Pro-CC expert',
    'Anti-CC expert'
  ],

  shuffleArray: function(array) {
    for (let i = array.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [array[i], array[j]] = [array[j], array[i]];
    }
    return array;
  },

  createAssignment: function() {
    const shuffledVocations = this.shuffleArray([...this.vocations]);
    return this.groups.map((group, index) => ({
      group: group,
      vocation: shuffledVocations[index]
    }));
  },

  displayAssignment: function() {
    const assignments = this.createAssignment();
    let html = '<h2>Random Group Assignments</h2><ul>';
    assignments.forEach(assignment => {
      html += `<li><strong>${assignment.group}:</strong> ${assignment.vocation}</li>`;
    });
    html += '</ul>';
    document.getElementById('groupAssignment_display').innerHTML = html;
    document.getElementById('groupAssignment_overlay').style.display = 'flex';
  },

  init: function() {
    const startButton = document.getElementById('groupAssignment_startButton');
    const closeButton = document.getElementById('groupAssignment_closeButton');
    
    startButton.addEventListener('click', () => this.displayAssignment());
    closeButton.addEventListener('click', () => {
      document.getElementById('groupAssignment_overlay').style.display = 'none';
    });
  }
};

// Initialize the group assignment functionality
GroupAssignment.init();
</script>
```

## Presentation Countdown

<div id="timer-container" style="text-align: center;">
  <!-- Timer Display -->
  <div id="timer" style="
    font-size: 348px;
    color: black;
    margin-bottom: 20px;">00:00</div>
  
  <!-- Control Buttons -->
  <button id="start-button" style="
    font-size: 24px;
    padding: 20px 40px;
    background-color: #007ACC;
    color: white;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    margin-right: 10px;">
    Start Timer
  </button>
  <button id="reset-button" style="
    font-size: 24px;
    padding: 20px 40px;
    background-color: #DC3545;
    color: white;
    border: none;
    border-radius: 8px;
    cursor: pointer;">
    Reset Timer
  </button>
</div>

<script>
  let countdownDuration = 300; // 5 minutes
  let initialDuration = 300; // Store the initial time
  let timerInterval;

  // Format time as MM:SS
  function formatTime(seconds) {
    const minutes = Math.floor(seconds / 60);
    const remainingSeconds = seconds % 60;
    return `${minutes.toString().padStart(2, '0')}:${remainingSeconds.toString().padStart(2, '0')}`;
  }

  // Update the timer display
  function updateTimer() {
    const timerElement = document.getElementById("timer");
    if (countdownDuration > 0) {
      countdownDuration--;
      timerElement.innerText = formatTime(countdownDuration);

      // Change color to red when time is below 60 seconds
      if (countdownDuration < 60) {
        timerElement.style.color = "red";
      } else {
        timerElement.style.color = "black";
      }
    } else {
      timerElement.innerText = "Time's up!";
      clearInterval(timerInterval);
    }
  }

  // Start the countdown when the button is clicked
  document.getElementById("start-button").addEventListener("click", function () {
    clearInterval(timerInterval); // Ensure no duplicate intervals
    timerInterval = setInterval(updateTimer, 1000);

    // Disable the start button while the timer is running
    this.disabled = true;
    this.innerText = "Timer Running...";
  });

  // Reset the timer when the reset button is clicked
  document.getElementById("reset-button").addEventListener("click", function () {
    clearInterval(timerInterval); // Stop the timer
    countdownDuration = initialDuration; // Reset time to initial value

    // Reset the timer display
    const timerElement = document.getElementById("timer");
    timerElement.innerText = formatTime(countdownDuration);
    timerElement.style.color = "black"; // Reset color to black

    // Re-enable the start button
    const startButton = document.getElementById("start-button");
    startButton.disabled = false;
    startButton.innerText = "Start Timer";
  });
</script>